/******************************************************************************\
FILE:           read_sw.zp
AUTHOR:         Theo Veenker <theo.veenker@beexy.nl>
                        Chris van Run <C.P.A.vanrun@uu.nl>
ADAPTED BY:     -

DESCRIPTION:

Implementation of task: Self-Paced Reading with Stationary Window

For more information on the read_sw task see readme.md in the 
test folder.


Global structure of experiment:

  - welcome

  - phase 1 (see subfolder test)

  - thankyou


HISTORY:
2015-08-06 CvR   Created.

\******************************************************************************/

requires 1.10;

//standards
import std_windows1;
import std_entry_page1;
import std_exit_page1;
import std_pause_page;
import std_blank_page;

//specials
import grouping;
import texts_en;

import test::task;


Experiment experiment
{
    on_event:entry()
    {
        control.button_box.open();

        // If necessary set parallel port line D0 to power button box device.
        control.button_box.output(0x02);

        show_test_windows();
    }

    on_event:message()
    {
        // On Ctrl+F4 jump unconditionally to the thank-you part.
        if (message_sender == control && message_arg == SYS_STOP)
        {
            control.mark_experiment_aborted();
            thankyou.enter();
        }
    }


    Part welcome
    {
        on_event:entry()
        {
            entry_page.set_text(WELCOME_TEXT);
            entry_page.action(this, 0s);
        }
    }


    Part phase1
    {
        on_event:entry()
        {
            test::action(this);
        }
    }


    Part thankyou
    {
        on_event:entry()
        {
            control.end_experiment();   // Check-in session.

            exit_page.set_text(THANK_YOU_TEXT);
            exit_page.action(this, 10s);
        }
    }
}
